//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 5.0.61118.0
// 
namespace CCWFM.AssistanceService {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TblAttachment", Namespace="http://schemas.datacontract.org/2004/07/CCWFM.Web.Model", IsReference=true)]
    public partial class TblAttachment : CCWFM.AssistanceService.EntityObject {
        
        private System.DateTime CreationDateField;
        
        private string FileNameField;
        
        private int IserialField;
        
        private System.DateTime LastUpdatedDateField;
        
        private string NotesField;
        
        private string OrginalFileNameField;
        
        private string PathField;
        
        private int RecordIdField;
        
        private string TableNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreationDate {
            get {
                return this.CreationDateField;
            }
            set {
                if ((this.CreationDateField.Equals(value) != true)) {
                    this.CreationDateField = value;
                    this.RaisePropertyChanged("CreationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Iserial {
            get {
                return this.IserialField;
            }
            set {
                if ((this.IserialField.Equals(value) != true)) {
                    this.IserialField = value;
                    this.RaisePropertyChanged("Iserial");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastUpdatedDate {
            get {
                return this.LastUpdatedDateField;
            }
            set {
                if ((this.LastUpdatedDateField.Equals(value) != true)) {
                    this.LastUpdatedDateField = value;
                    this.RaisePropertyChanged("LastUpdatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrginalFileName {
            get {
                return this.OrginalFileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OrginalFileNameField, value) != true)) {
                    this.OrginalFileNameField = value;
                    this.RaisePropertyChanged("OrginalFileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Path {
            get {
                return this.PathField;
            }
            set {
                if ((object.ReferenceEquals(this.PathField, value) != true)) {
                    this.PathField = value;
                    this.RaisePropertyChanged("Path");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RecordId {
            get {
                return this.RecordIdField;
            }
            set {
                if ((this.RecordIdField.Equals(value) != true)) {
                    this.RecordIdField = value;
                    this.RaisePropertyChanged("RecordId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TableName {
            get {
                return this.TableNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TableNameField, value) != true)) {
                    this.TableNameField = value;
                    this.RaisePropertyChanged("TableName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StructuralObject", Namespace="http://schemas.datacontract.org/2004/07/System.Data.Objects.DataClasses", IsReference=true)]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CCWFM.AssistanceService.EntityObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CCWFM.AssistanceService.TblAttachment))]
    public partial class StructuralObject : object, System.ComponentModel.INotifyPropertyChanged {
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityObject", Namespace="http://schemas.datacontract.org/2004/07/System.Data.Objects.DataClasses", IsReference=true)]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CCWFM.AssistanceService.TblAttachment))]
    public partial class EntityObject : CCWFM.AssistanceService.StructuralObject {
        
        private CCWFM.AssistanceService.EntityKey EntityKeyField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CCWFM.AssistanceService.EntityKey EntityKey {
            get {
                return this.EntityKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityKeyField, value) != true)) {
                    this.EntityKeyField = value;
                    this.RaisePropertyChanged("EntityKey");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityKey", Namespace="http://schemas.datacontract.org/2004/07/System.Data", IsReference=true)]
    public partial class EntityKey : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string EntityContainerNameField;
        
        private System.Collections.ObjectModel.ObservableCollection<CCWFM.AssistanceService.EntityKeyMember> EntityKeyValuesField;
        
        private string EntitySetNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EntityContainerName {
            get {
                return this.EntityContainerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityContainerNameField, value) != true)) {
                    this.EntityContainerNameField = value;
                    this.RaisePropertyChanged("EntityContainerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<CCWFM.AssistanceService.EntityKeyMember> EntityKeyValues {
            get {
                return this.EntityKeyValuesField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityKeyValuesField, value) != true)) {
                    this.EntityKeyValuesField = value;
                    this.RaisePropertyChanged("EntityKeyValues");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EntitySetName {
            get {
                return this.EntitySetNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EntitySetNameField, value) != true)) {
                    this.EntitySetNameField = value;
                    this.RaisePropertyChanged("EntitySetName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityKeyMember", Namespace="http://schemas.datacontract.org/2004/07/System.Data")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CCWFM.AssistanceService.EntityKey))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<CCWFM.AssistanceService.EntityKeyMember>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<CCWFM.AssistanceService.TupleOfintstring>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CCWFM.AssistanceService.TupleOfintstring))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<CCWFM.AssistanceService.TblAttachment>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CCWFM.AssistanceService.TblAttachment))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CCWFM.AssistanceService.EntityObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CCWFM.AssistanceService.StructuralObject))]
    public partial class EntityKeyMember : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string KeyField;
        
        private object ValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Key {
            get {
                return this.KeyField;
            }
            set {
                if ((object.ReferenceEquals(this.KeyField, value) != true)) {
                    this.KeyField = value;
                    this.RaisePropertyChanged("Key");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public object Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TupleOfintstring", Namespace="http://schemas.datacontract.org/2004/07/System")]
    public partial class TupleOfintstring : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int m_Item1Field;
        
        private string m_Item2Field;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int m_Item1 {
            get {
                return this.m_Item1Field;
            }
            set {
                if ((this.m_Item1Field.Equals(value) != true)) {
                    this.m_Item1Field = value;
                    this.RaisePropertyChanged("m_Item1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string m_Item2 {
            get {
                return this.m_Item2Field;
            }
            set {
                if ((object.ReferenceEquals(this.m_Item2Field, value) != true)) {
                    this.m_Item2Field = value;
                    this.RaisePropertyChanged("m_Item2");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="", ConfigurationName="AssistanceService.AssistanceService")]
    public interface AssistanceService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:AssistanceService/SaveLog", ReplyAction="urn:AssistanceService/SaveLogResponse")]
        System.IAsyncResult BeginSaveLog(string json, int userIserial, System.AsyncCallback callback, object asyncState);
        
        void EndSaveLog(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:AssistanceService/getData", ReplyAction="urn:AssistanceService/getDataResponse")]
        System.IAsyncResult BegingetData(string id, System.AsyncCallback callback, object asyncState);
        
        string EndgetData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:AssistanceService/GetAttachment", ReplyAction="urn:AssistanceService/GetAttachmentResponse")]
        System.IAsyncResult BeginGetAttachment(string TableName, int MasterId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<CCWFM.AssistanceService.TblAttachment> EndGetAttachment(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:AssistanceService/DeleteAttachment", ReplyAction="urn:AssistanceService/DeleteAttachmentResponse")]
        System.IAsyncResult BeginDeleteAttachment(CCWFM.AssistanceService.TblAttachment row, System.AsyncCallback callback, object asyncState);
        
        int EndDeleteAttachment(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:AssistanceService/UpdateOrInsertAttachment", ReplyAction="urn:AssistanceService/UpdateOrInsertAttachmentResponse")]
        System.IAsyncResult BeginUpdateOrInsertAttachment(System.Collections.ObjectModel.ObservableCollection<CCWFM.AssistanceService.TblAttachment> attachments, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<CCWFM.AssistanceService.TblAttachment> EndUpdateOrInsertAttachment(out System.Collections.ObjectModel.ObservableCollection<CCWFM.AssistanceService.TupleOfintstring> attachmentPath, out string FolderPath, System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface AssistanceServiceChannel : CCWFM.AssistanceService.AssistanceService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAttachmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAttachmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<CCWFM.AssistanceService.TblAttachment> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<CCWFM.AssistanceService.TblAttachment>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeleteAttachmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeleteAttachmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateOrInsertAttachmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateOrInsertAttachmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<CCWFM.AssistanceService.TupleOfintstring> attachmentPath {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<CCWFM.AssistanceService.TupleOfintstring>)(this.results[0]));
            }
        }
        
        public string FolderPath {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        public System.Collections.ObjectModel.ObservableCollection<CCWFM.AssistanceService.TblAttachment> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<CCWFM.AssistanceService.TblAttachment>)(this.results[2]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AssistanceServiceClient : System.ServiceModel.ClientBase<CCWFM.AssistanceService.AssistanceService>, CCWFM.AssistanceService.AssistanceService {
        
        private BeginOperationDelegate onBeginSaveLogDelegate;
        
        private EndOperationDelegate onEndSaveLogDelegate;
        
        private System.Threading.SendOrPostCallback onSaveLogCompletedDelegate;
        
        private BeginOperationDelegate onBegingetDataDelegate;
        
        private EndOperationDelegate onEndgetDataDelegate;
        
        private System.Threading.SendOrPostCallback ongetDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAttachmentDelegate;
        
        private EndOperationDelegate onEndGetAttachmentDelegate;
        
        private System.Threading.SendOrPostCallback onGetAttachmentCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteAttachmentDelegate;
        
        private EndOperationDelegate onEndDeleteAttachmentDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteAttachmentCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateOrInsertAttachmentDelegate;
        
        private EndOperationDelegate onEndUpdateOrInsertAttachmentDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateOrInsertAttachmentCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public AssistanceServiceClient() {
        }
        
        public AssistanceServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AssistanceServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AssistanceServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AssistanceServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SaveLogCompleted;
        
        public event System.EventHandler<getDataCompletedEventArgs> getDataCompleted;
        
        public event System.EventHandler<GetAttachmentCompletedEventArgs> GetAttachmentCompleted;
        
        public event System.EventHandler<DeleteAttachmentCompletedEventArgs> DeleteAttachmentCompleted;
        
        public event System.EventHandler<UpdateOrInsertAttachmentCompletedEventArgs> UpdateOrInsertAttachmentCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CCWFM.AssistanceService.AssistanceService.BeginSaveLog(string json, int userIserial, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaveLog(json, userIserial, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void CCWFM.AssistanceService.AssistanceService.EndSaveLog(System.IAsyncResult result) {
            base.Channel.EndSaveLog(result);
        }
        
        private System.IAsyncResult OnBeginSaveLog(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string json = ((string)(inValues[0]));
            int userIserial = ((int)(inValues[1]));
            return ((CCWFM.AssistanceService.AssistanceService)(this)).BeginSaveLog(json, userIserial, callback, asyncState);
        }
        
        private object[] OnEndSaveLog(System.IAsyncResult result) {
            ((CCWFM.AssistanceService.AssistanceService)(this)).EndSaveLog(result);
            return null;
        }
        
        private void OnSaveLogCompleted(object state) {
            if ((this.SaveLogCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveLogCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveLogAsync(string json, int userIserial) {
            this.SaveLogAsync(json, userIserial, null);
        }
        
        public void SaveLogAsync(string json, int userIserial, object userState) {
            if ((this.onBeginSaveLogDelegate == null)) {
                this.onBeginSaveLogDelegate = new BeginOperationDelegate(this.OnBeginSaveLog);
            }
            if ((this.onEndSaveLogDelegate == null)) {
                this.onEndSaveLogDelegate = new EndOperationDelegate(this.OnEndSaveLog);
            }
            if ((this.onSaveLogCompletedDelegate == null)) {
                this.onSaveLogCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveLogCompleted);
            }
            base.InvokeAsync(this.onBeginSaveLogDelegate, new object[] {
                        json,
                        userIserial}, this.onEndSaveLogDelegate, this.onSaveLogCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CCWFM.AssistanceService.AssistanceService.BegingetData(string id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetData(id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string CCWFM.AssistanceService.AssistanceService.EndgetData(System.IAsyncResult result) {
            return base.Channel.EndgetData(result);
        }
        
        private System.IAsyncResult OnBegingetData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string id = ((string)(inValues[0]));
            return ((CCWFM.AssistanceService.AssistanceService)(this)).BegingetData(id, callback, asyncState);
        }
        
        private object[] OnEndgetData(System.IAsyncResult result) {
            string retVal = ((CCWFM.AssistanceService.AssistanceService)(this)).EndgetData(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetDataCompleted(object state) {
            if ((this.getDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getDataCompleted(this, new getDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getDataAsync(string id) {
            this.getDataAsync(id, null);
        }
        
        public void getDataAsync(string id, object userState) {
            if ((this.onBegingetDataDelegate == null)) {
                this.onBegingetDataDelegate = new BeginOperationDelegate(this.OnBegingetData);
            }
            if ((this.onEndgetDataDelegate == null)) {
                this.onEndgetDataDelegate = new EndOperationDelegate(this.OnEndgetData);
            }
            if ((this.ongetDataCompletedDelegate == null)) {
                this.ongetDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetDataCompleted);
            }
            base.InvokeAsync(this.onBegingetDataDelegate, new object[] {
                        id}, this.onEndgetDataDelegate, this.ongetDataCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CCWFM.AssistanceService.AssistanceService.BeginGetAttachment(string TableName, int MasterId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAttachment(TableName, MasterId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<CCWFM.AssistanceService.TblAttachment> CCWFM.AssistanceService.AssistanceService.EndGetAttachment(System.IAsyncResult result) {
            return base.Channel.EndGetAttachment(result);
        }
        
        private System.IAsyncResult OnBeginGetAttachment(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string TableName = ((string)(inValues[0]));
            int MasterId = ((int)(inValues[1]));
            return ((CCWFM.AssistanceService.AssistanceService)(this)).BeginGetAttachment(TableName, MasterId, callback, asyncState);
        }
        
        private object[] OnEndGetAttachment(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<CCWFM.AssistanceService.TblAttachment> retVal = ((CCWFM.AssistanceService.AssistanceService)(this)).EndGetAttachment(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAttachmentCompleted(object state) {
            if ((this.GetAttachmentCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAttachmentCompleted(this, new GetAttachmentCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAttachmentAsync(string TableName, int MasterId) {
            this.GetAttachmentAsync(TableName, MasterId, null);
        }
        
        public void GetAttachmentAsync(string TableName, int MasterId, object userState) {
            if ((this.onBeginGetAttachmentDelegate == null)) {
                this.onBeginGetAttachmentDelegate = new BeginOperationDelegate(this.OnBeginGetAttachment);
            }
            if ((this.onEndGetAttachmentDelegate == null)) {
                this.onEndGetAttachmentDelegate = new EndOperationDelegate(this.OnEndGetAttachment);
            }
            if ((this.onGetAttachmentCompletedDelegate == null)) {
                this.onGetAttachmentCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAttachmentCompleted);
            }
            base.InvokeAsync(this.onBeginGetAttachmentDelegate, new object[] {
                        TableName,
                        MasterId}, this.onEndGetAttachmentDelegate, this.onGetAttachmentCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CCWFM.AssistanceService.AssistanceService.BeginDeleteAttachment(CCWFM.AssistanceService.TblAttachment row, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteAttachment(row, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int CCWFM.AssistanceService.AssistanceService.EndDeleteAttachment(System.IAsyncResult result) {
            return base.Channel.EndDeleteAttachment(result);
        }
        
        private System.IAsyncResult OnBeginDeleteAttachment(object[] inValues, System.AsyncCallback callback, object asyncState) {
            CCWFM.AssistanceService.TblAttachment row = ((CCWFM.AssistanceService.TblAttachment)(inValues[0]));
            return ((CCWFM.AssistanceService.AssistanceService)(this)).BeginDeleteAttachment(row, callback, asyncState);
        }
        
        private object[] OnEndDeleteAttachment(System.IAsyncResult result) {
            int retVal = ((CCWFM.AssistanceService.AssistanceService)(this)).EndDeleteAttachment(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeleteAttachmentCompleted(object state) {
            if ((this.DeleteAttachmentCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteAttachmentCompleted(this, new DeleteAttachmentCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteAttachmentAsync(CCWFM.AssistanceService.TblAttachment row) {
            this.DeleteAttachmentAsync(row, null);
        }
        
        public void DeleteAttachmentAsync(CCWFM.AssistanceService.TblAttachment row, object userState) {
            if ((this.onBeginDeleteAttachmentDelegate == null)) {
                this.onBeginDeleteAttachmentDelegate = new BeginOperationDelegate(this.OnBeginDeleteAttachment);
            }
            if ((this.onEndDeleteAttachmentDelegate == null)) {
                this.onEndDeleteAttachmentDelegate = new EndOperationDelegate(this.OnEndDeleteAttachment);
            }
            if ((this.onDeleteAttachmentCompletedDelegate == null)) {
                this.onDeleteAttachmentCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteAttachmentCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteAttachmentDelegate, new object[] {
                        row}, this.onEndDeleteAttachmentDelegate, this.onDeleteAttachmentCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CCWFM.AssistanceService.AssistanceService.BeginUpdateOrInsertAttachment(System.Collections.ObjectModel.ObservableCollection<CCWFM.AssistanceService.TblAttachment> attachments, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateOrInsertAttachment(attachments, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<CCWFM.AssistanceService.TblAttachment> CCWFM.AssistanceService.AssistanceService.EndUpdateOrInsertAttachment(out System.Collections.ObjectModel.ObservableCollection<CCWFM.AssistanceService.TupleOfintstring> attachmentPath, out string FolderPath, System.IAsyncResult result) {
            return base.Channel.EndUpdateOrInsertAttachment(out attachmentPath, out FolderPath, result);
        }
        
        private System.IAsyncResult OnBeginUpdateOrInsertAttachment(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<CCWFM.AssistanceService.TblAttachment> attachments = ((System.Collections.ObjectModel.ObservableCollection<CCWFM.AssistanceService.TblAttachment>)(inValues[0]));
            return ((CCWFM.AssistanceService.AssistanceService)(this)).BeginUpdateOrInsertAttachment(attachments, callback, asyncState);
        }
        
        private object[] OnEndUpdateOrInsertAttachment(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<CCWFM.AssistanceService.TupleOfintstring> attachmentPath = this.GetDefaultValueForInitialization<System.Collections.ObjectModel.ObservableCollection<CCWFM.AssistanceService.TupleOfintstring>>();
            string FolderPath = this.GetDefaultValueForInitialization<string>();
            System.Collections.ObjectModel.ObservableCollection<CCWFM.AssistanceService.TblAttachment> retVal = ((CCWFM.AssistanceService.AssistanceService)(this)).EndUpdateOrInsertAttachment(out attachmentPath, out FolderPath, result);
            return new object[] {
                    attachmentPath,
                    FolderPath,
                    retVal};
        }
        
        private void OnUpdateOrInsertAttachmentCompleted(object state) {
            if ((this.UpdateOrInsertAttachmentCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateOrInsertAttachmentCompleted(this, new UpdateOrInsertAttachmentCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateOrInsertAttachmentAsync(System.Collections.ObjectModel.ObservableCollection<CCWFM.AssistanceService.TblAttachment> attachments) {
            this.UpdateOrInsertAttachmentAsync(attachments, null);
        }
        
        public void UpdateOrInsertAttachmentAsync(System.Collections.ObjectModel.ObservableCollection<CCWFM.AssistanceService.TblAttachment> attachments, object userState) {
            if ((this.onBeginUpdateOrInsertAttachmentDelegate == null)) {
                this.onBeginUpdateOrInsertAttachmentDelegate = new BeginOperationDelegate(this.OnBeginUpdateOrInsertAttachment);
            }
            if ((this.onEndUpdateOrInsertAttachmentDelegate == null)) {
                this.onEndUpdateOrInsertAttachmentDelegate = new EndOperationDelegate(this.OnEndUpdateOrInsertAttachment);
            }
            if ((this.onUpdateOrInsertAttachmentCompletedDelegate == null)) {
                this.onUpdateOrInsertAttachmentCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateOrInsertAttachmentCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateOrInsertAttachmentDelegate, new object[] {
                        attachments}, this.onEndUpdateOrInsertAttachmentDelegate, this.onUpdateOrInsertAttachmentCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override CCWFM.AssistanceService.AssistanceService CreateChannel() {
            return new AssistanceServiceClientChannel(this);
        }
        
        private class AssistanceServiceClientChannel : ChannelBase<CCWFM.AssistanceService.AssistanceService>, CCWFM.AssistanceService.AssistanceService {
            
            public AssistanceServiceClientChannel(System.ServiceModel.ClientBase<CCWFM.AssistanceService.AssistanceService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginSaveLog(string json, int userIserial, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = json;
                _args[1] = userIserial;
                System.IAsyncResult _result = base.BeginInvoke("SaveLog", _args, callback, asyncState);
                return _result;
            }
            
            public void EndSaveLog(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("SaveLog", _args, result);
            }
            
            public System.IAsyncResult BegingetData(string id, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = id;
                System.IAsyncResult _result = base.BeginInvoke("getData", _args, callback, asyncState);
                return _result;
            }
            
            public string EndgetData(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("getData", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetAttachment(string TableName, int MasterId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = TableName;
                _args[1] = MasterId;
                System.IAsyncResult _result = base.BeginInvoke("GetAttachment", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<CCWFM.AssistanceService.TblAttachment> EndGetAttachment(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<CCWFM.AssistanceService.TblAttachment> _result = ((System.Collections.ObjectModel.ObservableCollection<CCWFM.AssistanceService.TblAttachment>)(base.EndInvoke("GetAttachment", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDeleteAttachment(CCWFM.AssistanceService.TblAttachment row, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = row;
                System.IAsyncResult _result = base.BeginInvoke("DeleteAttachment", _args, callback, asyncState);
                return _result;
            }
            
            public int EndDeleteAttachment(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("DeleteAttachment", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUpdateOrInsertAttachment(System.Collections.ObjectModel.ObservableCollection<CCWFM.AssistanceService.TblAttachment> attachments, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = attachments;
                System.IAsyncResult _result = base.BeginInvoke("UpdateOrInsertAttachment", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<CCWFM.AssistanceService.TblAttachment> EndUpdateOrInsertAttachment(out System.Collections.ObjectModel.ObservableCollection<CCWFM.AssistanceService.TupleOfintstring> attachmentPath, out string FolderPath, System.IAsyncResult result) {
                object[] _args = new object[2];
                System.Collections.ObjectModel.ObservableCollection<CCWFM.AssistanceService.TblAttachment> _result = ((System.Collections.ObjectModel.ObservableCollection<CCWFM.AssistanceService.TblAttachment>)(base.EndInvoke("UpdateOrInsertAttachment", _args, result)));
                attachmentPath = ((System.Collections.ObjectModel.ObservableCollection<CCWFM.AssistanceService.TupleOfintstring>)(_args[0]));
                FolderPath = ((string)(_args[1]));
                return _result;
            }
        }
    }
}
