<navigation:Page x:Name="page" x:Class="CCWFM.Views.OGView.AdjustmentView"
 		   xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
		   xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
		   xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
		   xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
           xmlns:dataprimitives="clr-namespace:System.Windows.Controls.Primitives;assembly=System.Windows.Controls.Data"
		   xmlns:navigation="clr-namespace:System.Windows.Controls;assembly=System.Windows.Controls.Navigation"
		   xmlns:sdk="http://schemas.microsoft.com/winfx/2006/xaml/presentation/sdk"
		   xmlns:dataGrid="clr-namespace:Os.Controls.DataGrid;assembly=Os.Controls"
		   xmlns:viewModel="clr-namespace:CCWFM.ViewModel.OGViewModels"
           xmlns:ext="clr-namespace:CCWFM.Helpers.Extention"
           xmlns:local="clr-namespace:CCWFM.Views"
           xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
           xmlns:cmd="http://www.galasoft.ch/mvvmlight"
		   mc:Ignorable="d"
		   d:DesignWidth="1000" d:DesignHeight="480"
		   Title="Adjustment" TabNavigation="Cycle">

    <navigation:Page.Resources>
        <viewModel:AdjustmentViewModel x:Key="ViewModel" />
        <Style x:Key="DataGridBaseHeaderStyle"    
           TargetType="dataprimitives:DataGridColumnHeader">
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
        </Style>
        <Style x:Key="ItemDimHeaderStyle"   TargetType="dataprimitives:DataGridColumnHeader" BasedOn="{StaticResource DataGridBaseHeaderStyle}">
            <Setter Property="Foreground" Value="#FF000000"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="IsTabStop" Value="False"/>
            <Setter Property="SeparatorBrush" Value="#FFC9CACA"/>
            <Setter Property="Padding" Value="8"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Grid x:Name="FromRoot">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Rectangle x:Name="BackgroundRectangle" Fill="#FF1F3B53" Stretch="Fill" Grid.ColumnSpan="2"/>
                            <Rectangle x:Name="BackgroundGradient" Stretch="Fill" Grid.ColumnSpan="2">
                                <Rectangle.Fill>
                                    <LinearGradientBrush EndPoint=".7,1" StartPoint=".7,0">
                                        <GradientStop Color="#FCFFFFFF" Offset="0.015"/>
                                        <GradientStop Color="#F7FFFFFF" Offset="0.375"/>
                                        <GradientStop Color="#E5FFFFFF" Offset="0.6"/>
                                        <GradientStop Color="#D1FFFFFF" Offset="1"/>
                                    </LinearGradientBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                            <Grid HorizontalAlignment="Stretch" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" >
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="20" />
                                    <RowDefinition Height="1" />
                                    <RowDefinition Height="20" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="100*"/>
                                    <ColumnDefinition Width="1" />
                                    <ColumnDefinition Width="100*"/>
                                    <ColumnDefinition Width="1" />
                                    <ColumnDefinition Width="100*"/>
                                    <ColumnDefinition Width="1" />
                                    <ColumnDefinition Width="100*"/>
                                </Grid.ColumnDefinitions>
                                <!-- Row 0 -->
                                <ContentPresenter Content="Item Dimensions" VerticalAlignment="Center" HorizontalAlignment="Center"                                        Grid.ColumnSpan="8" />
                                <!-- Row 1 -->
                                <Rectangle Fill="#FFC9CACA" VerticalAlignment="Stretch" Height="1" Visibility="Visible" Grid.Row="1" Grid.ColumnSpan="8" />
                                <!-- Row 2 -->
                                <ContentPresenter Content="Color Code" Grid.Row="2" VerticalAlignment="Center" HorizontalAlignment="Center" />
                                <Rectangle Fill="#FFC9CACA" VerticalAlignment="Stretch" Width="1" Visibility="Visible" Grid.Row="2" Grid.Column="1" />
                                <ContentPresenter Content="Color " Grid.Row="2" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="2" />
                                <Rectangle Fill="#FFC9CACA" VerticalAlignment="Stretch" Width="1" Visibility="Visible" Grid.Row="2" Grid.Column="3" />
                                <ContentPresenter Content="Size" Grid.Row="2" Grid.Column="4" VerticalAlignment="Center" HorizontalAlignment="Center" />
                                <Rectangle Fill="#FFC9CACA" Width="1" Visibility="Visible" Grid.Row="2" Grid.Column="5" />
                                <ContentPresenter Content="Batch No" Grid.Row="2" Grid.Column="6" VerticalAlignment="Center" HorizontalAlignment="Center" />
                            </Grid>
                            <Rectangle x:Name="VerticalSeparator" Fill="#FFC9CACA"                            
                                   VerticalAlignment="Stretch" Width="1" Visibility="Visible"                      
                                   Grid.Row="1" Grid.Column="1"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </navigation:Page.Resources>
    <Grid x:Name="LayoutRoot" Background="White" DataContext="{Binding Source={StaticResource ViewModel}}"
          Margin="5" >
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
            <RowDefinition Height="30"/>
        </Grid.RowDefinitions>
        <local:WindowHeader x:Name="Header" DataContext="{Binding Source={StaticResource ViewModel}}"></local:WindowHeader>
        <Grid Margin="5" Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
           
                <sdk:Label Content="{Binding WareHouse, Mode=OneWay, Source={StaticResource LocalizedStrings}}" />
                <ComboBox Grid.Column="1" Margin="5" IsEnabled="{Binding IsHeaderHasDetails, Mode=TwoWay, Converter={StaticResource ReversedConverter}}" 
                      ItemsSource="{Binding Path=WarehouseList, Mode=TwoWay}"
                      SelectedValue="{Binding Path=SelectedMainRow.WarehouseIserial, Mode=TwoWay}" DisplayMemberPath="Ename"                      
                      SelectedValuePath="Iserial" SelectedItem="{Binding SelectedMainRow.TblWarehouse, Mode=TwoWay}"/>
                <sdk:Label Content="{Binding CountReference, Mode=OneWay, Source={StaticResource LocalizedStrings}}" Grid.Column="2" />
                <TextBox Margin="5" Text="{Binding SelectedMainRow.CountReference, Mode=TwoWay}" Grid.Column="3"
                      IsEnabled="{Binding IsReadOnly, Mode=TwoWay,Converter={StaticResource ReversedConverter}}"/>
                <sdk:Label Content="{Binding Date, Mode=OneWay, Source={StaticResource LocalizedStrings}}" Grid.Row="1" Grid.Column="2" />
                <sdk:DatePicker Grid.Row="1" Grid.Column="3" Margin="5" SelectedDate="{Binding SelectedMainRow.DocDate, Mode=TwoWay}"
                            IsEnabled="{Binding IsHeaderHasDetails, Mode=TwoWay, Converter={StaticResource ReversedConverter}}" />
                <sdk:Label Content="{Binding Sequence, Mode=OneWay, Source={StaticResource LocalizedStrings}}" Grid.Row="1" />
                <TextBlock Margin="5" Text="{Binding SelectedMainRow.Code, Mode=TwoWay}" Grid.Row="1" Grid.Column="1"/>
                <sdk:Label Content="{Binding Notes, Mode=OneWay, Source={StaticResource LocalizedStrings}}" Grid.Row="2" />
                <TextBox Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="3" Grid.RowSpan="2"
                     Margin="5,5,525,5" MinHeight="50" IsEnabled="{Binding IsReadOnly, Mode=TwoWay,Converter={StaticResource ReversedConverter}}"
                     Text="{Binding SelectedMainRow.Notes, Mode=TwoWay}"/>
              <StackPanel Grid.Row="2" Orientation="Horizontal" Grid.Column="1" Grid.ColumnSpan="3" Margin="5" HorizontalAlignment="Right">
                <Button Content="Temp Data"
                     IsEnabled="{Binding IsReadOnly, Mode=TwoWay,Converter={StaticResource ReversedConverter}}"
                     Margin="5" Width="75" Command="{Binding Path=OpenTempData, Mode=TwoWay}"
                     CommandParameter="{Binding ElementName=page, Mode=OneWay}"/>
                <Button Content="{Binding ImportFromExcel, Source={StaticResource LocalizedStrings}}" Grid.Row="2"
                     IsEnabled="{Binding IsReadOnly, Mode=TwoWay,Converter={StaticResource ReversedConverter}}"
                    Grid.Column="3" Margin="5" Width="110" Command="{Binding Path=ImportFromExcelCommand, Mode=TwoWay}"/>
                <TextBox ToolTipService.ToolTip="Ref" Text="{Binding Path=ItemDimIserialStr,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                     Grid.Row="2" Grid.Column="3" Width="75" Height="50"
                     Margin="5" IsEnabled="{Binding IsReadOnly, Mode=TwoWay,Converter={StaticResource ReversedConverter}}"
                     ext:FocusExtension.IsFocused="{Binding IsRefFocused, Mode=TwoWay}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="KeyDown">
                            <cmd:EventToCommand Command="{Binding Path=GetDetailItem,Source={StaticResource ViewModel}}" PassEventArgsToCommand="True"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </TextBox>
                <TextBox ToolTipService.ToolTip="Ref" Text="{Binding Path=ItemDimQuantityStr,Mode=TwoWay}"
                     Grid.Row="2" Grid.Column="3" Width="75" Height="50"
                     Margin="5" IsEnabled="{Binding IsReadOnly, Mode=TwoWay,Converter={StaticResource ReversedConverter}}"/>
                <Button ToolTipService.ToolTip="Search" Cursor="Hand"  IsEnabled="{Binding IsReadOnly, Mode=TwoWay, Converter={StaticResource ReversedConverter}}"
                        Command="{Binding Path=OpenItemSearch, Source={StaticResource ViewModel}}" Grid.Row="2" Grid.Column="3"
                        CommandParameter="{Binding ElementName=page}" Width="60" Height="50" Margin="5">
                    <Image Source="/CCWFM;component/Images/1371054421_old-edit-find.png" Stretch="Uniform"></Image>
                </Button>
                <Button Content="{Binding Approve, Source={StaticResource LocalizedStrings}}" Grid.Row="2" Grid.RowSpan="2"
                    Grid.Column="3" MaxWidth="100" Margin="5" Width="60" Command="{Binding Path=ApproveCommand, Mode=TwoWay}"/>
            </StackPanel>          
        </Grid>
        <dataGrid:OsGrid Grid.Row="2" VerticalAlignment="Stretch" Margin="5" ItemsSource="{Binding SelectedMainRow.TblAdjustmentDetails, Mode=TwoWay}"
                         ColumnWidth="*" IsReadOnly="{Binding IsReadOnly, Mode=TwoWay}" SelectedItem="{Binding SelectedDetailRow, Mode=TwoWay}"
                         Loaded="OsGrid_Loaded">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="KeyDown">
                    <cmd:EventToCommand Command="{Binding DeleteAdjustmentDetail}" PassEventArgsToCommand="True"/>
                </i:EventTrigger>
                <i:EventTrigger EventName="LoadingRow">
                    <cmd:EventToCommand Command="{Binding LoadingDetailRows}" PassEventArgsToCommand="True"/>
                </i:EventTrigger>
                <i:EventTrigger EventName="SelectionChanged">
                    <cmd:EventToCommand Command="{Binding DetailSelectionChanged}" PassEventArgsToCommand="True"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <dataGrid:OsGrid.Columns>
                <sdk:DataGridTextColumn HeaderStyle="{StaticResource DataGridBaseHeaderStyle}" dataGrid:DataGridColumnHelper.HeaderBinding=
                                            "{Binding Referance, Source={StaticResource LocalizedStrings}}" Width="Auto"
                                        Binding="{Binding Path=ItemDimIserial, Mode=TwoWay}" >
                </sdk:DataGridTextColumn>

                <sdk:DataGridTextColumn HeaderStyle="{StaticResource DataGridBaseHeaderStyle}" Binding="{Binding Path=ItemAdjustment.ItemCode, Mode=TwoWay}"
                                         dataGrid:DataGridColumnHelper.HeaderBinding=
                                         "{Binding Code, Source={StaticResource LocalizedStrings}}" Width="SizeToHeader"/>
                <sdk:DataGridTextColumn  HeaderStyle="{StaticResource DataGridBaseHeaderStyle}"  Binding="{Binding Path=ItemAdjustment.ItemName, Mode=TwoWay}"
                                         dataGrid:DataGridColumnHelper.HeaderBinding=
                                         "{Binding ItemName, Source={StaticResource LocalizedStrings}}" Width="*"/>

                <sdk:DataGridTemplateColumn HeaderStyle="{StaticResource ItemDimHeaderStyle}" Width="*">
                    <sdk:DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <TextBox Text="{Binding Path=ItemAdjustment.ColorFromCode, Mode=TwoWay}" IsReadOnly="True"/>
                                <Rectangle Fill="#FFC9CACA" VerticalAlignment="Stretch" Width="1" Grid.Column="1" />
                                <TextBox Text="{Binding Path=ItemAdjustment.ColorFrom.Ename, Mode=TwoWay}" IsReadOnly="True" Grid.Column="2"/>
                                <Rectangle Fill="#FFC9CACA" VerticalAlignment="Stretch" Width="1" Grid.Column="3" />
                                <TextBox Text="{Binding Path=ItemAdjustment.SizeFrom, Mode=TwoWay}" Grid.Column="4" IsReadOnly="True"/>
                                <Rectangle Fill="#FFC9CACA" VerticalAlignment="Stretch" Width="1" Grid.Column="5" />
                                <TextBox Text="{Binding Path=ItemAdjustment.BatchNoFrom, Mode=TwoWay}" Margin="2,0,0,0" Grid.Column="6" IsReadOnly="True"/>
                            </Grid>
                        </DataTemplate>
                    </sdk:DataGridTemplateColumn.CellTemplate>
                </sdk:DataGridTemplateColumn>

                <sdk:DataGridTextColumn x:Name="Cost" HeaderStyle="{StaticResource DataGridBaseHeaderStyle}" Binding="{Binding Path=ItemAdjustment.Cost, Mode=TwoWay}"
                                         dataGrid:DataGridColumnHelper.HeaderBinding=
                                         "{Binding Cost, Source={StaticResource LocalizedStrings}}" Width="*" />
                <sdk:DataGridTextColumn HeaderStyle="{StaticResource DataGridBaseHeaderStyle}" Binding="{Binding Path=ItemAdjustment.AvailableQuantity, Mode=TwoWay}"
                                         dataGrid:DataGridColumnHelper.HeaderBinding=
                                         "{Binding Available, Source={StaticResource LocalizedStrings}}" Width="*" IsReadOnly="True"/>
                <sdk:DataGridTemplateColumn HeaderStyle="{StaticResource DataGridBaseHeaderStyle}"
                                         dataGrid:DataGridColumnHelper.HeaderBinding=
                                         "{Binding Counted, Source={StaticResource LocalizedStrings}}" Width="*" IsReadOnly="False">
                    <sdk:DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBox Text="{Binding Path=ItemAdjustment.CountedQuantity, Mode=TwoWay}" IsReadOnly="{Binding IsReadOnly, Source={StaticResource ViewModel}, Mode=TwoWay}" />
                        </DataTemplate>
                    </sdk:DataGridTemplateColumn.CellTemplate>
                </sdk:DataGridTemplateColumn>
                <sdk:DataGridTemplateColumn HeaderStyle="{StaticResource DataGridBaseHeaderStyle}"
                                         dataGrid:DataGridColumnHelper.HeaderBinding=
                                         "{Binding Difference, Source={StaticResource LocalizedStrings}}" Width="*" IsReadOnly="False">
                    <sdk:DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBox Text="{Binding Path=ItemAdjustment.DifferenceQuantity, Mode=TwoWay}"
                                     IsReadOnly="{Binding IsReadOnly, Source={StaticResource ViewModel}, Mode=TwoWay}" 
                                     ext:FocusExtension.IsFocused="{Binding IsQuantityFocused, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="KeyDown">
                                        <cmd:EventToCommand Command="{Binding ReturnToBarcode, Source={StaticResource ViewModel}}" PassEventArgsToCommand="True"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </TextBox>
                        </DataTemplate>
                    </sdk:DataGridTemplateColumn.CellTemplate>
                </sdk:DataGridTemplateColumn>
            </dataGrid:OsGrid.Columns>
        </dataGrid:OsGrid>
        <StackPanel Grid.Row="3" Orientation="Horizontal" HorizontalAlignment="Right" >
            <TextBlock Text="Total Available: " VerticalAlignment="Center" HorizontalAlignment="Center"/>
            <TextBlock Width="150" Text="{Binding TotalAvailable}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
            <TextBlock Text="Total Counted: " VerticalAlignment="Center" HorizontalAlignment="Center"/>
            <TextBlock Width="150" Text="{Binding TotalCounted}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
        </StackPanel>
    </Grid>
</navigation:Page>
