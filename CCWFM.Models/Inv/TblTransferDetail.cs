//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CCWFM.Web.DataLayer
{
    using Models.LocalizationHelpers;
    using System;
    using System.Collections.Generic;
    using System.Collections.ObjectModel;
    using System.ComponentModel.DataAnnotations;

    public class TblTransferDetail : PropertiesViewModelBase
    {
        private int iserial;
        private int? transferHeader;
        private int? itemDimFrom;
        private int? itemDimTo;
        private decimal quantity;

        public int Iserial
        {
            get { return iserial; }
            set
            {
                if (ReferenceEquals(iserial, value) != true)
                {
                    iserial = value; RaisePropertyChanged(nameof(Iserial));
                }
            }
        }
        public int? TransferHeader
        {
            get { return transferHeader; }
            set
            {
                if (ReferenceEquals(transferHeader, value) != true)
                {
                    transferHeader = value; RaisePropertyChanged(nameof(TransferHeader));
                }
            }
        }
        [Required(ErrorMessageResourceType = typeof(strings), ErrorMessageResourceName = nameof(strings.ReqItem))]
        public int? ItemDimFrom
        {
            get { return itemDimFrom; }
            set
            {
                if (ReferenceEquals(itemDimFrom, value) != true)
                {
                    itemDimFrom = value; RaisePropertyChanged(nameof(ItemDimFrom));
                }
            }
        }
        [Required(ErrorMessageResourceType = typeof(strings), ErrorMessageResourceName = nameof(strings.ReqItem))]
        public int? ItemDimTo
        {
            get { return itemDimTo; }
            set
            {
                if (ReferenceEquals(itemDimTo, value) != true)
                {
                    itemDimTo = value; RaisePropertyChanged(nameof(ItemDimTo));
                }
            }
        }
        [Range(0.001, float.MaxValue, ErrorMessageResourceType = typeof(strings), ErrorMessageResourceName = nameof(strings.ReqQty))]
        public decimal Quantity
        {
            get { return quantity; }
            set
            {
                if (ReferenceEquals(quantity, value) != true)
                {
                    quantity = value; RaisePropertyChanged(nameof(Quantity));
                }
            }
        }

        private TblTransferHeader transferHeaderRecord;
        public virtual TblTransferHeader TransferHeaderRecord
        {
            get { return transferHeaderRecord ?? (transferHeaderRecord = new TblTransferHeader()); }
            set
            {
                if ((ReferenceEquals(transferHeaderRecord, value) != true))
                {
                    transferHeaderRecord = value; RaisePropertyChanged(nameof(TransferHeaderRecord));
                }
            }
        }

        private TblItemDim itemDimFromRecord;
        public virtual TblItemDim TblItemDim
        {
            get { return itemDimFromRecord ?? (itemDimFromRecord = new TblItemDim()); }
            set
            {
                if ((ReferenceEquals(itemDimFromRecord, value) != true))
                {
                    itemDimFromRecord = value; RaisePropertyChanged(nameof(itemDimFromRecord));
                }
            }
        }
        private TblItemDim itemDimToRecord;
        public virtual TblItemDim TblItemDim1
        {
            get { return itemDimToRecord ?? (itemDimToRecord = new TblItemDim()); }
            set
            {
                if ((ReferenceEquals(itemDimToRecord, value) != true))
                {
                    itemDimToRecord = value; RaisePropertyChanged(nameof(itemDimToRecord));
                }
            }
        }

        private ItemDimensionSearchModel itemTransfer;
        public virtual ItemDimensionSearchModel ItemTransfer
        {
            get { return itemTransfer ?? (itemTransfer = new Web.DataLayer.ItemDimensionSearchModel()); }
            set
            {
                if ((ReferenceEquals(itemTransfer, value) != true))
                {
                    itemTransfer = value; RaisePropertyChanged(nameof(itemTransfer));
                }
            }
        }

        decimal transferredQuantity;
        [Range(0.001, int.MaxValue, ErrorMessageResourceType = typeof(strings), ErrorMessageResourceName = nameof(strings.ReqQty))]
        public decimal TransferredQuantity
        {
            get
            {
                return Quantity;
            }
            set
            {
                if (ItemTransfer.AvailableQuantity >= value)
                {
                    transferredQuantity = value; Quantity = value;
                    ItemTransfer.TransferredQuantity = value;
                }
                RaisePropertyChanged(nameof(TransferredQuantity));
            }
        }

    }
}
